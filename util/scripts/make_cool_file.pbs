#!/bin/bash

# Set parameters for the cluster
#PBS -l nodes=1:ppn=20
#PBS -l walltime=20:00:00
#PBS -l mem=60GB
#PBS -l vmem=60GB
#PBS -j oe


## The help message:
function usage
{
    echo -e "usage: bash make_cool_file.pbs -c CONF -o OUT_DIR
    " 
}

## Parse arguments from the command line
while [ "$1" != "" ]; do
    case $1 in
        -c | --conf )           shift
                                conf=$1
                                ;;
        -o | --out_dir )        shift
                                out_dir=$1   
                                ;;
        -h | --help )           usage
                                exit
                                ;;
        * )                     usage
                                exit 1
    esac
    shift
done

## Put output files in subdirectory named after the run
cd ${PBS_O_WORKDIR}
source ${conf}
cd ${out_dir}

## Multi-resolution matrix file for HiGlass
# Minimum resolution for HiGlass
resolution=1000

# Divide chromosomes into bins
${bin_dir}/conda/bin/cooler makebins \
   ${chrom_sizes} \
   ${resolution} \
   > ${out_dir}/temp_chrom_bins.bed

# Make .cool file (1000bp resolution)
${bin_dir}/conda/bin/cooler cload pairix -p 20\
   ${out_dir}/temp_chrom_bins.bed \
   ${out_dir}/${run}.bsorted.pairs.gz \
   ${out_dir}/${run}.higlass.cool

# Make final, multi-resolution .cool file (with zooming ability)
${bin_dir}/conda/bin/cooler zoomify -p 20\
   --no-balance ${out_dir}/${run}.higlass.cool

# Remove intermediary file
rm ${out_dir}/temp_chrom_bins.bed
#rm ${out_dir}/${run}.e500.higlass.cool
# 
# 
# # Copy .hic file to URL directory
# # for automatic viewing of 2D contact map
# url_dir="/projects/encode/to_ctencode01/dev"
# 
# if [ -d ${url_dir} ]; then
#     cp ${hic_file} ${url_dir}
# fi
